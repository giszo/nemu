#include <nemu/memory/ram.h>

#include <cassert>

using memory::RAM;

// =====================================================================================================================
RAM::RAM(unsigned size)
    : m_data(new uint8_t[size]),
      m_size(size)
{
}

// =====================================================================================================================
RAM::~RAM()
{
    delete[] m_data;
}

// =====================================================================================================================
unsigned RAM::size() const
{
    return m_size;
}

// =====================================================================================================================
uint8_t RAM::read(uint16_t address)
{
    assert(address < m_size);
    return m_data[address];
}

// =====================================================================================================================
void RAM::write(uint16_t address, uint8_t data)
{
    assert(address < m_size);
    m_data[address] = data;
}
